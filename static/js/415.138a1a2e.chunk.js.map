{"version":3,"file":"static/js/415.138a1a2e.chunk.js","mappings":"+MA0CA,UArCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GAAM,OAAIN,EAAUM,EAAOC,QAArB,GAChC,GAAE,IAEH,IAAMC,EAAa,SAAAC,GACjB,OAAoB,OAAhBA,EACK,wBAEH,kCAAN,OAAyCA,EAC1C,EAED,OACE,SAAC,KAAD,UACGV,EAAOW,OAAS,GACfX,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,YAAaI,EAApB,EAAoBA,MAApB,OACT,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAOd,EAArC,UACE,4BACE,gBACEe,IAAG,UAAKR,EAAWC,IACnBQ,IAAKJ,EACLK,MAAM,MACNC,OAAO,SAET,uBAAIN,UATDD,EADA,KAiBlB,C,+LCpCDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJiB,oCAOnB,IAAMjB,EAAiB,mCAAG,oGACDgB,EAAAA,EAAAA,IAAU,wBADT,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMZ,GAAN,uFACIQ,EAAAA,EAAAA,IAAA,iBAAoBR,IADxB,cACbU,EADa,yBAGZA,EAASC,MAHG,2CAAH,sDAMZE,EAAmB,mCAAG,WAAMb,GAAN,uFACHQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,aADG,cACpBU,EADoB,yBAGnBA,EAASC,KAAKG,MAHK,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMf,GAAN,uFACHQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,aADG,cACpBU,EADoB,yBAEnBA,EAASC,KAAKhB,SAFK,2CAAH,sDAKnBqB,EAAqB,mCAAG,WAAMC,GAAN,uFACLT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDU,OAAQ,CACND,MAAOA,KAHiB,cACtBP,EADsB,OAM5BS,QAAQC,IAAIV,EAASC,KAAKhB,SANE,kBAOrBe,EAASC,KAAKhB,SAPO,2CAAH,qD","sources":["pages/Home.jsx","utils/MoviesAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from 'utils/MoviesAPI';\nimport { MoviesGrid } from 'components/AppStyled';\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies().then(movies => setTrends(movies.results));\n  }, []);\n\n  const viewPoster = poster_path => {\n    if (poster_path === null) {\n      return './images/no_cover.png';\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  };\n\n  return (\n    <MoviesGrid>\n      {trends.length > 0 &&\n        trends.map(({ id, poster_path, title }) => (\n          <li key={id}>\n            <NavLink to={`/movies/${id}`} state={location}>\n              <div>\n                <img\n                  src={`${viewPoster(poster_path)}`}\n                  alt={title}\n                  width=\"300\"\n                  height=\"450\"\n                />\n                <p>{title}</p>\n              </div>\n            </NavLink>\n          </li>\n        ))}\n    </MoviesGrid>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = '3cfddd5e97fd8d1a3fdf959358de6593';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nconst getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nconst getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nconst getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nconst getMovieByQuerySearch = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByID,\n  getMovieCreditsByID,\n  getMovieReviewsByID,\n  getMovieByQuerySearch,\n};\n"],"names":["useState","trends","setTrends","location","useLocation","useEffect","getTrendingMovies","then","movies","results","viewPoster","poster_path","length","map","id","title","to","state","src","alt","width","height","axios","api_key","response","data","getMovieByID","getMovieCreditsByID","cast","getMovieReviewsByID","getMovieByQuerySearch","query","params","console","log"],"sourceRoot":""}
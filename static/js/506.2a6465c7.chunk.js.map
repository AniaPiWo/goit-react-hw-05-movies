{"version":3,"file":"static/js/506.2a6465c7.chunk.js","mappings":"6PAGMA,EAAYC,EAAAA,GAAAA,IAAH,gFAMTC,EAAgBD,EAAAA,GAAAA,IAAH,0IAQbE,EAAsBF,EAAAA,GAAAA,EAAH,yPAanBG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kX,SC0BjB,EA7CqB,WAAO,IAAD,EACzB,GAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,EAASI,OAOrB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaR,GAASS,MAAK,SAAAX,GAAK,OAAIC,EAASD,EAAb,GACjC,GAAE,CAACE,IAEU,OAAVF,EAAJ,CAGA,IAAQY,EAA+CZ,EAA/CY,MAAOC,EAAwCb,EAAxCa,aAAcC,EAA0Bd,EAA1Bc,YAAaC,EAAaf,EAAbe,SAE1C,OACE,iCACE,UAAC,KAAD,CAASC,GAAE,UAAEZ,EAASI,aAAX,QAAoB,IAA/B,UAAqC,eAArC,wBACA,UAACf,EAAD,YACE,gBAAKwB,IAAG,UAfO,oCAeP,OAAoBH,GAAeI,IAAKN,KAChD,UAACjB,EAAD,YACE,wBAAKiB,KACL,yCACA,yBAAIO,OAAON,GAAcO,QAAQ,GAAjC,YACA,uCACA,6BAAKL,MACL,UAACnB,EAAD,YACE,yBACE,SAACC,EAAD,CAAamB,GAAG,OAAhB,qBAEF,yBACE,SAACnB,EAAD,CAAamB,GAAG,UAAhB,iCAMR,SAAC,EAAAK,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QA1BL,CA8BF,C,+LClDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJiB,oCAOnB,IAAMC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,wBADT,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKjBjB,EAAY,mCAAG,WAAMkB,GAAN,uFACIL,EAAAA,EAAAA,IAAA,iBAAoBK,IADxB,cACbF,EADa,yBAGZA,EAASC,MAHG,2CAAH,sDAMZE,EAAmB,mCAAG,WAAMD,GAAN,uFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADG,cACpBF,EADoB,yBAGnBA,EAASC,KAAKG,MAHK,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMH,GAAN,uFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADG,cACpBF,EADoB,yBAEnBA,EAASC,KAAKK,SAFK,2CAAH,sDAKnBC,EAAqB,mCAAG,WAAMC,GAAN,uFACLX,EAAAA,EAAAA,IAAU,gBAAiB,CAChDY,OAAQ,CACND,MAAOA,KAHiB,cACtBR,EADsB,OAM5BpB,QAAQC,IAAImB,EAASC,KAAKK,SANE,kBAOrBN,EAASC,KAAKK,SAPO,2CAAH,qD","sources":["pages/MovieDetails/MovieDetailStyled.jsx","pages/MovieDetails/MovieDetails.jsx","utils/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst MovieInfo = styled.div`\n  display: flex;\n  margin-top: 10px;\n  color: white;\n`;\n\nconst MovieTextInfo = styled.div`\n  padding: 20px;\n  padding-top: 0;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n  line-height: 20px;\n`;\n\nconst AdditionalMovieInfo = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n  gap: 20px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-bottom: 20px;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n`;\n\nconst NavLinkItem = styled(NavLink)`\n  text-decoration: none;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n  padding: 8px;\n  line-height: 20px;\n  border: 1px solid white;\n  border-radius: 5px;\n\n  :hover {\n    color: hotpink;\n    border: 1px solid hotpink;\n  }\n\n  &.active {\n    color: #fff;\n    background-color: hotpink;\n    border: 1px solid hotpink;\n  }\n`;\n\nexport { NavLinkItem, AdditionalMovieInfo, MovieInfo, MovieTextInfo };\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieByID } from 'utils/MoviesAPI';\n\nimport {\n  NavLinkItem,\n  AdditionalMovieInfo,\n  MovieInfo,\n  MovieTextInfo,\n} from 'pages/MovieDetails/MovieDetailStyled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location.state);\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300/';\n\n  useEffect(() => {\n    getMovieByID(movieId).then(movie => setMovie(movie));\n  }, [movieId]);\n\n  if (movie === null) {\n    return;\n  }\n  const { title, vote_average, poster_path, overview } = movie;\n\n  return (\n    <>\n      <NavLink to={location.state ?? '/'}>{'⬅️'}Back to movielist</NavLink>\n      <MovieInfo>\n        <img src={`${BASE_IMG_URL}${poster_path}`} alt={title} />\n        <MovieTextInfo>\n          <h1>{title}</h1>\n          <h2>User score:</h2>\n          <p>{Number(vote_average).toFixed(2)} / 10</p>\n          <h2>Owerview:</h2>\n          <p> {overview}</p>\n          <AdditionalMovieInfo>\n            <h3>\n              <NavLinkItem to=\"cast\">Cast</NavLinkItem>\n            </h3>\n            <h3>\n              <NavLinkItem to=\"reviews\">Reviews</NavLinkItem>\n            </h3>\n          </AdditionalMovieInfo>\n        </MovieTextInfo>\n      </MovieInfo>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = '3cfddd5e97fd8d1a3fdf959358de6593';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nconst getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nconst getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nconst getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nconst getMovieByQuerySearch = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByID,\n  getMovieCreditsByID,\n  getMovieReviewsByID,\n  getMovieByQuerySearch,\n};\n"],"names":["MovieInfo","styled","MovieTextInfo","AdditionalMovieInfo","NavLinkItem","NavLink","useState","movie","setMovie","movieId","useParams","location","useLocation","console","log","state","useEffect","getMovieByID","then","title","vote_average","poster_path","overview","to","src","alt","Number","toFixed","Suspense","fallback","axios","api_key","getTrendingMovies","response","data","id","getMovieCreditsByID","cast","getMovieReviewsByID","results","getMovieByQuerySearch","query","params"],"sourceRoot":""}